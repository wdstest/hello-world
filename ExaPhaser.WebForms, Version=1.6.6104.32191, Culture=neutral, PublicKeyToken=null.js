/* Generated by JSIL v0.8.2 build 30533. See http://jsil.org/ for more information. */ 
'use strict';
var $asm01 = JSIL.DeclareAssembly("ExaPhaser.WebForms, Version=1.6.6104.32191, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("ExaPhaser");
JSIL.DeclareNamespace("ExaPhaser.WebForms");
/* class ExaPhaser.WebForms.Control */ 

(function Control$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.System.EventArgs)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.EventHandler)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.System.Delegate)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm02.System.Threading.Interlocked)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm04.SharpJS.JSLibraries.JQuery.JQElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.SharpJS.JSLibraries.JQuery.JQueryObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm02.System.NotImplementedException)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Drawing.Point)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm02.System.Int32)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.ExaPhaser.WebForms.ControlCollection)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm02.System.Collections.ObjectModel.Collection$b1.Of($asm01.ExaPhaser.WebForms.Control))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.ExaPhaser.WebForms.FontStyle)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm01.ExaPhaser.WebForms.PositioningType)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Drawing.RelativePoint)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm02.System.Boolean)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm02.System.InvalidOperationException)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm02.System.Collections.Generic.IEnumerator$b1.Of($asm01.ExaPhaser.WebForms.Control))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm02.System.Collections.IEnumerator)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm02.System.IDisposable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.System.NotImplementedException, null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm02.System.String], ["T"]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.ExaPhaser.WebForms.ControlCollection, [$asm01.ExaPhaser.WebForms.Control]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.String, "!!0"], ["T"]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.System.InvalidOperationException, [$asm02.System.String]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("ExaPhaser.WebForms.Control")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm02.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm02.System.Collections.Generic.IEnumerator$b1.Of($asm01.ExaPhaser.WebForms.Control).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm02.System.IDisposable.Dispose)) ();
  };


  function Control__ctor () {
    this.InitializeControl();
  }; 

  function Control_$lSetInternalElement$gb__74_0 (sender, args) {
    var expr_06 = this.Click;
    if (expr_06 === null) {
      return;
    }
    expr_06(this, args);
  }; 

  function Control_$lSetInternalElement$gb__74_1 (sender, args) {
    var expr_06 = this.Focus;
    if (expr_06 === null) {
      return;
    }
    expr_06(this, args);
  }; 

  function Control_$lSetInternalElement$gb__74_2 (sender, args) {
    var expr_06 = this.LostFocus;
    if (expr_06 === null) {
      return;
    }
    expr_06(this, args);
  }; 

  function Control_add_Click (value) {
    var eventHandler = this.Click;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Combine(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "Click"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_add_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Combine(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_add_Loaded (value) {
    var eventHandler = this.Loaded;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Combine(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "Loaded"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_add_LostFocus (value) {
    var eventHandler = this.LostFocus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Combine(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "LostFocus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_DockControlInParentContainer () {
    this.Control$InternalJQElement$value.JQElement$JQueryObjectHandle$value.JQObject.css("width", "100%");
    this.Control$InternalJQElement$value.JQElement$JQueryObjectHandle$value.JQObject.css("height", "100%");
  }; 

  function Control_FadeIn () {
    (this.Control$InternalJQElement$value).FadeIn();
  }; 

  function Control_FadeOut () {
    (this.Control$InternalJQElement$value).FadeOut();
  }; 

  function Control_get_ConstantPosition () {
    return this.GetConstantPosition();
  }; 

  function Control_get_ContainerElement () {
    return this._container;
  }; 

  function Control_get_Controls () {
    return this._subControls;
  }; 

  function Control_get_FontStyle () {
    return this.Control$FontStyle$value;
  }; 

  function Control_get_Height () {
    return (this.Control$InternalJQElement$value).Height();
  }; 

  function Control_get_InternalElement () {
    return this._internalElement;
  }; 

  function Control_get_InternalJQElement () {
    return this.Control$InternalJQElement$value;
  }; 

  function Control_get_Margin () {
    return this.Control$Margin$value;
  }; 

  function Control_get_Parent () {
    return this._parent;
  }; 

  function Control_get_Text () {
    throw $S00().Construct();
  }; 

  function Control_get_Visible () {
    return (this.Control$InternalJQElement$value).Is(":visible");
  }; 

  function Control_get_Width () {
    return (this.Control$InternalJQElement$value).Width();
  }; 

  function Control_GetConstantPosition () {
    return new ($T09())($S01().CallVirtual("Css$b1", [$asm02.System.Int32], this.Control$InternalJQElement$value, "left"), $S01().CallVirtual("Css$b1", [$asm02.System.Int32], this.Control$InternalJQElement$value, "top"));
  }; 

  function Control_Hide () {
    (this.Control$InternalJQElement$value).Hide();
  }; 

  function Control_InitializeControl () {
    this._subControls = $S02().Construct(this);
  }; 

  function Control_OnLoaded (e) {
    var expr_06 = this.Loaded;
    if (expr_06 !== null) {
      expr_06(this, e);
    }
    this.UpdateContent();
  }; 

  function Control_PerformLayout () {
  }; 

  function Control_remove_Click (value) {
    var eventHandler = this.Click;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Remove(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "Click"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_remove_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Remove(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_remove_Loaded (value) {
    var eventHandler = this.Loaded;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Remove(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "Loaded"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_remove_LostFocus (value) {
    var eventHandler = this.LostFocus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Remove(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "LostFocus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_set_ConstantPosition (value) {
    this.SetConstantPosition(value);
  }; 

  function Control_set_ContainerElement (value) {
    this.SetContainer(value);
  }; 

  function Control_set_Controls (value) {
    this.SetControls(value);
  }; 

  function Control_set_FontStyle (value) {
    this.Control$FontStyle$value = value;
  }; 

  function Control_set_Height (value) {
    (this.Control$InternalJQElement$value).Height(value);
  }; 

  function Control_set_InternalElement (value) {
    this.SetInternalElement(value);
  }; 

  function Control_set_InternalJQElement (value) {
    this.Control$InternalJQElement$value = value;
  }; 

  function Control_set_Margin (value) {
    this.Control$Margin$value = (value | 0);
  }; 

  function Control_set_Parent (value) {
    this.SetParent(value);
  }; 

  function Control_set_PositioningType (value) {
    this.SetPositioningType(value);
  }; 

  function Control_set_RelativePosition (value) {
    this.SetRelativePosition(value);
  }; 

  function Control_set_Text (value) {
    throw $S00().Construct();
  }; 

  function Control_set_Visible (value) {
    if (value) {
      (this.Control$InternalJQElement$value).Show();
      return;
    }
    (this.Control$InternalJQElement$value).Hide();
  }; 

  function Control_set_Width (value) {
    (this.Control$InternalJQElement$value).Width(value);
  }; 

  function Control_SetConstantPosition (position) {
    $S03().CallVirtual("Css$b1", [$asm02.System.Int32], this.Control$InternalJQElement$value, "left", position.Point$X$value);
    $S03().CallVirtual("Css$b1", [$asm02.System.Int32], this.Control$InternalJQElement$value, "top", position.Point$Y$value);
  }; 

  function Control_SetContainer (value) {
    if (this._container === null) {
      this._container = value;
      this.OnLoaded($T01().Empty);
      return;
    }
    throw $S04().Construct("The control has already been added to a container.");
  }; 

  function Control_SetControls (value) {
    if (this._subControls.ControlCollection$ParentControl$value === null) {
      this._subControls.ControlCollection$ParentControl$value = this;
      var enumerator = value.GetEnumerator();
      try {

        while ($IM00().Call(enumerator, null)) {
          ($IM01().Call(enumerator, null)).set_Parent(this);
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    }
    enumerator = value.GetEnumerator();
    try {

      while ($IM00().Call(enumerator, null)) {
        var current = $IM01().Call(enumerator, null);
        $S05().CallVirtual("Add", null, this._subControls, current);
      }
    } finally {
      if (enumerator !== null) {
        $IM02().Call(enumerator, null);
      }
    }
  }; 

  function Control_SetInternalElement (value) {
    this._internalElement = value;
    this.Control$InternalJQElement$value = new ($T05())(this._internalElement);
    (this.Control$InternalJQElement$value).add_Click($T02().New(this, null, new JSIL.MethodPointerInfo($thisType, "$lSetInternalElement$gb__74_0", $S06(), false, false)));
    (this.Control$InternalJQElement$value).add_Focus($T02().New(this, null, new JSIL.MethodPointerInfo($thisType, "$lSetInternalElement$gb__74_1", $S07(), false, false)));
    (this.Control$InternalJQElement$value).add_LostFocus($T02().New(this, null, new JSIL.MethodPointerInfo($thisType, "$lSetInternalElement$gb__74_2", $S08(), false, false)));
  }; 

  function Control_SetParent (parentControl) {
    if (parentControl !== null) {
      this._parent = parentControl;
      this._subControls.ControlCollection$ParentControl$value = this._parent;
    }
  }; 

  function Control_SetPositioningType (positioningType) {
    switch (positioningType.valueOf()) {
      case 0: 
        var value = "absolute";
        break;

      case 1: 
        value = "fixed";
        break;

      case 2: 
        value = "relative";
        break;

      case 3: 
        value = "static";
        break;

      default: 
        value = "static";
        break;

    }
    (this.Control$InternalJQElement$value).Css("position", value);
  }; 

  function Control_SetRelativePosition (position) {
    (this.Control$InternalJQElement$value).Css("left", position.RelativePoint$X$value);
    (this.Control$InternalJQElement$value).Css("top", position.RelativePoint$Y$value);
  }; 

  function Control_Show () {
    (this.Control$InternalJQElement$value).Show();
  }; 

  function Control_SimulateClick () {
    (this.Control$InternalJQElement$value).Trigger("click");
  }; 

  function Control_UpdateContent () {
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.Control", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      Control__ctor
    );

    $.Method({Static:false, Public:false}, "$lSetInternalElement$gb__74_0", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      Control_$lSetInternalElement$gb__74_0
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lSetInternalElement$gb__74_1", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      Control_$lSetInternalElement$gb__74_1
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lSetInternalElement$gb__74_2", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      Control_$lSetInternalElement$gb__74_2
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_Click", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      Control_add_Click
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_Focus", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      Control_add_Focus
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_Loaded", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      Control_add_Loaded
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_LostFocus", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      Control_add_LostFocus
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "DockControlInParentContainer", 
      JSIL.MethodSignature.Void, 
      Control_DockControlInParentContainer
    );

    $.Method({Static:false, Public:true }, "FadeIn", 
      JSIL.MethodSignature.Void, 
      Control_FadeIn
    );

    $.Method({Static:false, Public:true }, "FadeOut", 
      JSIL.MethodSignature.Void, 
      Control_FadeOut
    );

    $.Method({Static:false, Public:true }, "get_ConstantPosition", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Drawing.Point")), 
      Control_get_ConstantPosition
    );

    $.Method({Static:false, Public:true }, "get_ContainerElement", 
      JSIL.MethodSignature.Return($asm03.TypeRef("SharpJS.Dom.Element")), 
      Control_get_ContainerElement
    );

    $.Method({Static:false, Public:true }, "get_Controls", 
      JSIL.MethodSignature.Return($asm02.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type])), 
      Control_get_Controls
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_FontStyle", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.FontStyle")), 
      Control_get_FontStyle
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Height", 
      JSIL.MethodSignature.Return($.Int32), 
      Control_get_Height
    );

    $.Method({Static:false, Public:true }, "get_InternalElement", 
      JSIL.MethodSignature.Return($asm03.TypeRef("SharpJS.Dom.Element")), 
      Control_get_InternalElement
    );

    $.Method({Static:false, Public:true }, "get_InternalJQElement", 
      JSIL.MethodSignature.Return($asm04.TypeRef("SharpJS.JSLibraries.JQuery.JQElement")), 
      Control_get_InternalJQElement
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Margin", 
      JSIL.MethodSignature.Return($.Int32), 
      Control_get_Margin
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Parent", 
      JSIL.MethodSignature.Return($.Type), 
      Control_get_Parent
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      Control_get_Text
    );

    $.Method({Static:false, Public:true }, "get_Visible", 
      JSIL.MethodSignature.Return($.Boolean), 
      Control_get_Visible
    );

    $.Method({Static:false, Public:true }, "get_Width", 
      JSIL.MethodSignature.Return($.Int32), 
      Control_get_Width
    );

    $.Method({Static:false, Public:false}, "GetConstantPosition", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Drawing.Point")), 
      Control_GetConstantPosition
    );

    $.Method({Static:false, Public:true }, "Hide", 
      JSIL.MethodSignature.Void, 
      Control_Hide
    );

    $.Method({Static:false, Public:false}, "InitializeControl", 
      JSIL.MethodSignature.Void, 
      Control_InitializeControl
    );

    $.Method({Static:false, Public:false}, "OnLoaded", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventArgs")), 
      Control_OnLoaded
    );

    $.Method({Static:false, Public:true , Virtual:true }, "PerformLayout", 
      JSIL.MethodSignature.Void, 
      Control_PerformLayout
    );

    $.Method({Static:false, Public:true }, "remove_Click", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      Control_remove_Click
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_Focus", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      Control_remove_Focus
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_Loaded", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      Control_remove_Loaded
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_LostFocus", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      Control_remove_LostFocus
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ConstantPosition", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Drawing.Point")), 
      Control_set_ConstantPosition
    );

    $.Method({Static:false, Public:true }, "set_ContainerElement", 
      JSIL.MethodSignature.Action($asm03.TypeRef("SharpJS.Dom.Element")), 
      Control_set_ContainerElement
    );

    $.Method({Static:false, Public:true }, "set_Controls", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type])), 
      Control_set_Controls
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_FontStyle", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.FontStyle")), 
      Control_set_FontStyle
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Height", 
      JSIL.MethodSignature.Action($.Int32), 
      Control_set_Height
    );

    $.Method({Static:false, Public:true }, "set_InternalElement", 
      JSIL.MethodSignature.Action($asm03.TypeRef("SharpJS.Dom.Element")), 
      Control_set_InternalElement
    );

    $.Method({Static:false, Public:false}, "set_InternalJQElement", 
      JSIL.MethodSignature.Action($asm04.TypeRef("SharpJS.JSLibraries.JQuery.JQElement")), 
      Control_set_InternalJQElement
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Margin", 
      JSIL.MethodSignature.Action($.Int32), 
      Control_set_Margin
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Parent", 
      JSIL.MethodSignature.Action($.Type), 
      Control_set_Parent
    );

    $.Method({Static:false, Public:true }, "set_PositioningType", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.PositioningType")), 
      Control_set_PositioningType
    );

    $.Method({Static:false, Public:true }, "set_RelativePosition", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Drawing.RelativePoint")), 
      Control_set_RelativePosition
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      Control_set_Text
    );

    $.Method({Static:false, Public:true }, "set_Visible", 
      JSIL.MethodSignature.Action($.Boolean), 
      Control_set_Visible
    );

    $.Method({Static:false, Public:true }, "set_Width", 
      JSIL.MethodSignature.Action($.Int32), 
      Control_set_Width
    );

    $.Method({Static:false, Public:false}, "SetConstantPosition", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Drawing.Point")), 
      Control_SetConstantPosition
    );

    $.Method({Static:false, Public:false}, "SetContainer", 
      JSIL.MethodSignature.Action($asm03.TypeRef("SharpJS.Dom.Element")), 
      Control_SetContainer
    );

    $.Method({Static:false, Public:false}, "SetControls", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type])), 
      Control_SetControls
    );

    $.Method({Static:false, Public:false}, "SetInternalElement", 
      JSIL.MethodSignature.Action($asm03.TypeRef("SharpJS.Dom.Element")), 
      Control_SetInternalElement
    );

    $.Method({Static:false, Public:false}, "SetParent", 
      JSIL.MethodSignature.Action($.Type), 
      Control_SetParent
    );

    $.Method({Static:false, Public:false}, "SetPositioningType", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.PositioningType")), 
      Control_SetPositioningType
    );

    $.Method({Static:false, Public:false}, "SetRelativePosition", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Drawing.RelativePoint")), 
      Control_SetRelativePosition
    );

    $.Method({Static:false, Public:true }, "Show", 
      JSIL.MethodSignature.Void, 
      Control_Show
    );

    $.Method({Static:false, Public:true }, "SimulateClick", 
      JSIL.MethodSignature.Void, 
      Control_SimulateClick
    );

    $.Method({Static:false, Public:true , Virtual:true }, "UpdateContent", 
      JSIL.MethodSignature.Void, 
      Control_UpdateContent
    );

    $.Field({Static:false, Public:false}, "Click", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Focus", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LostFocus", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Loaded", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "_container", $asm03.TypeRef("SharpJS.Dom.Element"));

    $.Field({Static:false, Public:false}, "_internalElement", $asm03.TypeRef("SharpJS.Dom.Element"));

    $.Field({Static:false, Public:false}, "_parent", $.Type);

    $.Field({Static:false, Public:false}, "_subControls", $asm01.TypeRef("ExaPhaser.WebForms.ControlCollection"));

    $.Field({Static:false, Public:false}, "Control$FontStyle$value", $asm01.TypeRef("ExaPhaser.WebForms.FontStyle"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Control$InternalJQElement$value", $asm04.TypeRef("SharpJS.JSLibraries.JQuery.JQElement"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Control$Margin$value", $.Int32)
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ConstantPosition", $asm01.TypeRef("ExaPhaser.WebForms.Drawing.Point"));

    $.Property({Static:false, Public:true }, "ContainerElement", $asm03.TypeRef("SharpJS.Dom.Element"));

    $.Property({Static:false, Public:true }, "Controls", $asm02.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type]));

    $.Property({Static:false, Public:true , Virtual:true }, "FontStyle", $asm01.TypeRef("ExaPhaser.WebForms.FontStyle"));

    $.Property({Static:false, Public:true }, "Height", $.Int32);

    $.Property({Static:false, Public:true }, "InternalElement", $asm03.TypeRef("SharpJS.Dom.Element"));

    $.Property({Static:false, Public:true }, "InternalJQElement", $asm04.TypeRef("SharpJS.JSLibraries.JQuery.JQElement"));

    $.Property({Static:false, Public:true }, "Margin", $.Int32);

    $.Property({Static:false, Public:true }, "Parent", $.Type);

    $.Property({Static:false, Public:true }, "PositioningType", $asm01.TypeRef("ExaPhaser.WebForms.PositioningType"));

    $.Property({Static:false, Public:true }, "RelativePosition", $asm01.TypeRef("ExaPhaser.WebForms.Drawing.RelativePoint"));

    $.Property({Static:false, Public:true , Virtual:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "Visible", $.Boolean);

    $.Property({Static:false, Public:true }, "Width", $.Int32);

    $.Event({Static:false, Public:true }, "Click", $asm02.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "Focus", $asm02.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "LostFocus", $asm02.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "Loaded", $asm02.TypeRef("System.EventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.ControlCollection */ 

(function ControlCollection$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.System.Collections.ObjectModel.Collection$b1.Of($asm01.ExaPhaser.WebForms.Control))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.Collections.Generic.List$b1.Of($asm01.ExaPhaser.WebForms.Control))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.System.Collections.Generic.List$b1.Of($asm01.ExaPhaser.WebForms.Control), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Int32, $asm01.TypeRef("ExaPhaser.WebForms.Control")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("ExaPhaser.WebForms.Control"), [$asm02.System.Int32]))) ();
  };


  function ControlCollection__ctor$00 (parentControl) {
    $T01().prototype._ctor.call(this);
    this.ControlCollection$ParentControl$value = parentControl;
    this._controls = $S00().Construct();
  }; 

  function ControlCollection__ctor$01 () {
    $thisType.prototype._ctor.call(this, null);
  }; 

  function ControlCollection_ClearItems () {
    $T01().prototype.ClearItems.call(this);
    (this._controls).Clear();
  }; 

  function ControlCollection_get_ParentControl () {
    return this.ControlCollection$ParentControl$value;
  }; 

  function ControlCollection_InsertItem$02 (index, control) {
    $S01().Call($T01().prototype, "InsertItem", null, this, index, control);
    if (this.ControlCollection$ParentControl$value !== null) {
      if (control.get_Parent() === null) {
        control.set_Parent(this.ControlCollection$ParentControl$value);
      }
      control.set_ContainerElement((this.ControlCollection$ParentControl$value).get_InternalElement());
      (this.ControlCollection$ParentControl$value).get_InternalElement().ElementHandle.appendChild(control.get_InternalElement().ElementHandle);
    }
    (this._controls).Add(control);
  }; 

  function ControlCollection_RemoveItem (index) {
    var control = $S02().Call($T01().prototype, "get_Item", null, this, index);
    var expr_0E = this.ControlCollection$ParentControl$value;
    if (expr_0E !== null) {
      expr_0E.get_InternalElement().ElementHandle.removeChild(control.get_InternalElement().ElementHandle);
    }
    (this._controls).Remove(control);
    $T01().prototype.RemoveItem.call(this, index);
  }; 

  function ControlCollection_set_ParentControl (value) {
    this.ControlCollection$ParentControl$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm01.TypeRef("ExaPhaser.WebForms.Control")]), 
      Name: "ExaPhaser.WebForms.ControlCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Control")), 
      ControlCollection__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ControlCollection__ctor$01
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ClearItems", 
      JSIL.MethodSignature.Void, 
      ControlCollection_ClearItems
    );

    $.Method({Static:false, Public:true }, "get_ParentControl", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Control")), 
      ControlCollection_get_ParentControl
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "InsertItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm01.TypeRef("ExaPhaser.WebForms.Control")]), 
      ControlCollection_InsertItem$02
    );

    $.Method({Static:false, Public:false, Virtual:true }, "RemoveItem", 
      JSIL.MethodSignature.Action($.Int32), 
      ControlCollection_RemoveItem
    );

    $.Method({Static:false, Public:true }, "set_ParentControl", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Control")), 
      ControlCollection_set_ParentControl
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_controls", $asm02.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("ExaPhaser.WebForms.Control")]));

    $.Field({Static:false, Public:false}, "ControlCollection$ParentControl$value", $asm01.TypeRef("ExaPhaser.WebForms.Control"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ParentControl", $asm01.TypeRef("ExaPhaser.WebForms.Control"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.DelegateCommand */ 

(function DelegateCommand$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Action)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommandParameter)) ();
  };


  function DelegateCommand__ctor (executeAction) {
    this._executeAction = executeAction;
  }; 

  function DelegateCommand_Execute (param) {
    var expr_06 = this._executeAction;
    if (expr_06 === null) {
      return;
    }
    expr_06();
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.DelegateCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.Action")), 
      DelegateCommand__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.ICommandParameter")), 
      DelegateCommand_Execute
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_executeAction", $asm02.TypeRef("System.Action"));

    $.ImplementInterfaces(
      /* 0 */ $asm01.TypeRef("ExaPhaser.WebForms.ICommand")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.FontStyle */ 

(function FontStyle$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.SharpJS.Dom.Styles.FontWeight)) ();
  };


  function FontStyle__ctor () {
    this.FontStyle$FontSize$value = 16;
  }; 

  function FontStyle_get_FontSize () {
    return this.FontStyle$FontSize$value;
  }; 

  function FontStyle_get_FontWeight () {
    return this.FontStyle$FontWeight$value;
  }; 

  function FontStyle_set_FontSize (value) {
    this.FontStyle$FontSize$value = (value | 0);
  }; 

  function FontStyle_set_FontWeight (value) {
    this.FontStyle$FontWeight$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.FontStyle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      FontStyle__ctor
    );

    $.Method({Static:false, Public:true }, "get_FontSize", 
      JSIL.MethodSignature.Return($.Int32), 
      FontStyle_get_FontSize
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_FontWeight", 
      JSIL.MethodSignature.Return($asm03.TypeRef("SharpJS.Dom.Styles.FontWeight")), 
      FontStyle_get_FontWeight
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FontSize", 
      JSIL.MethodSignature.Action($.Int32), 
      FontStyle_set_FontSize
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FontWeight", 
      JSIL.MethodSignature.Action($asm03.TypeRef("SharpJS.Dom.Styles.FontWeight")), 
      FontStyle_set_FontWeight
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FontStyle$FontWeight$value", $asm03.TypeRef("SharpJS.Dom.Styles.FontWeight"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FontStyle$FontSize$value", $.Int32)
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "FontWeight", $asm03.TypeRef("SharpJS.Dom.Styles.FontWeight"));

    $.Property({Static:false, Public:true }, "FontSize", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface ExaPhaser.WebForms.ICommand */ 

JSIL.MakeInterface(
  "ExaPhaser.WebForms.ICommand", true, [], function ($) {
    $.Method({}, "Execute", JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.ICommandParameter")));
  }, []);

/* class ExaPhaser.WebForms.Layout */ 

(function Layout$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Collections.ObjectModel.Collection$b1.Of($asm01.ExaPhaser.WebForms.Control))) ();
  };


  function Layout__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm01.TypeRef("ExaPhaser.WebForms.Control")]), 
      Name: "ExaPhaser.WebForms.Layout", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Layout__ctor
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum ExaPhaser.WebForms.PositioningType */ 

JSIL.MakeEnum(
  {
    FullName: "ExaPhaser.WebForms.PositioningType", 
    BaseType: $asm02.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Absolute: 0, 
    Fixed: 1, 
    Relative: 2, 
    Static: 3, 
  }
);

/* class ExaPhaser.WebForms.WebApplication */ 

(function WebApplication$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Themes.CSSUITheme)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Themes.CSSFramework)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.JSIL.RequiresJSILRuntimeException)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm04.SharpJS.JSLibraries.JQuery.JQElement)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm04.SharpJS.JSLibraries.JQuery.JQElements.JQDivElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.ExaPhaser.WebForms.WebForm)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm03.SharpJS.Dom.Document)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(JSIL.MethodSignature.Action($asm04.TypeRef("SharpJS.JSLibraries.JQuery.JQElement")))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.ExaPhaser.WebForms.WebForm, $asm04.SharpJS.JSLibraries.JQuery.JQElement]))) ();
  };


  function WebApplication__ctor (theme) {
    if ((0) === null) {
      throw new ($T03())();
    }
    this.WebApplication$UITheme$value = theme;
    $thisType.WebApplication$CurrentTheme$value = this.WebApplication$UITheme$value;
  }; 

  function WebApplication_CreateApplication (applicationHostElement) {
    this.CreateFormHostElement(applicationHostElement);
  }; 

  function WebApplication_CreateFormHostElement (formHostParent) {
    var jQDivElement = new ($T05())();
    this._formHost = new ($T05())();
    $S00().CallVirtual("Append", null, jQDivElement, this._formHost);
    switch ((this.WebApplication$UITheme$value.CSSUITheme$Stylesheet$value).valueOf()) {
      case 0: 
        jQDivElement.AddClass("row");
        (this._formHost).AddClass("large-12");
        (this._formHost).AddClass("columns");
        break;

      case 1: 
      case 2: 
        jQDivElement.AddClass("row");
        (this._formHost).AddClass("col-lg-12 col-md-12");
        break;

      case 4: 
        jQDivElement.AddClass("grid");
        (this._formHost).AddClass("centered grid__col--12");
        break;

      case 5: 
        jQDivElement.AddClass("wrap");
        break;

    }
    (this._formHost).AddClass("webform-host-container");
    $S00().CallVirtual("Append", null, formHostParent, jQDivElement);
  }; 

  function WebApplication_get_CurrentTheme () {
    return $thisType.WebApplication$CurrentTheme$value;
  }; 

  function WebApplication_get_UITheme () {
    return this.WebApplication$UITheme$value;
  }; 

  function WebApplication_Run$00 (webForm, hostElementId) {
    $S01().CallVirtual("Run", null, this, webForm, new ($T04())($T08().GetElementById(hostElementId)));
  }; 

  function WebApplication_Run$01 (webForm, hostElement) {
    this.CreateApplication(hostElement);
    (webForm.Control$InternalJQElement$value).AddClass("webform");
    webForm.set_ContainerElement((this._formHost).get_DomRepresentation());
  }; 

  function WebApplication_set_CurrentTheme (value) {
    $thisType.WebApplication$CurrentTheme$value = value;
  }; 

  function WebApplication_set_UITheme (value) {
    this.WebApplication$UITheme$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.WebApplication", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication__ctor
    );

    $.Method({Static:false, Public:false}, "CreateApplication", 
      JSIL.MethodSignature.Action($asm04.TypeRef("SharpJS.JSLibraries.JQuery.JQElement")), 
      WebApplication_CreateApplication
    );

    $.Method({Static:false, Public:false}, "CreateFormHostElement", 
      JSIL.MethodSignature.Action($asm04.TypeRef("SharpJS.JSLibraries.JQuery.JQElement")), 
      WebApplication_CreateFormHostElement
    );

    $.Method({Static:true , Public:true }, "get_CurrentTheme", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication_get_CurrentTheme
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UITheme", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication_get_UITheme
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Run", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("ExaPhaser.WebForms.WebForm"), $.String]), 
      WebApplication_Run$00
    );

    $.Method({Static:false, Public:true }, "Run", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("ExaPhaser.WebForms.WebForm"), $asm04.TypeRef("SharpJS.JSLibraries.JQuery.JQElement")]), 
      WebApplication_Run$01
    );

    $.Method({Static:true , Public:false}, "set_CurrentTheme", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication_set_CurrentTheme
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UITheme", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication_set_UITheme
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "_formHost", $asm04.TypeRef("SharpJS.JSLibraries.JQuery.JQElements.JQDivElement"));

    $.Field({Static:false, Public:false}, "WebApplication$UITheme$value", $asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "WebApplication$CurrentTheme$value", $asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));


    function WebApplication__cctor () {
      $thisType.WebApplication$CurrentTheme$value = new ($T00())($T01().Bootstrap);
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      WebApplication__cctor
    );

    $.Property({Static:false, Public:true }, "UITheme", $asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme"));

    $.Property({Static:true , Public:true }, "CurrentTheme", $asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.WebForm */ 

(function WebForm$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.DivElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };


  function WebForm__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this.PerformLayout();
  }; 

  function WebForm_UpdateContent () {
    $T00().prototype.UpdateContent.call(this);
    this.get_ContainerElement().ElementHandle.appendChild(this.get_InternalElement().ElementHandle);
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.WebForm", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WebForm__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "UpdateContent", 
      JSIL.MethodSignature.Void, 
      WebForm_UpdateContent
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.ParameterizedCommand */ 

(function ParameterizedCommand$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Action$b1.Of($asm01.ExaPhaser.WebForms.ICommandParameter))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommandParameter)) ();
  };


  function ParameterizedCommand__ctor (executeAction) {
    this._executeAction = executeAction;
  }; 

  function ParameterizedCommand_Execute (parameter) {
    var expr_06 = this._executeAction;
    if (expr_06 === null) {
      return;
    }
    expr_06(parameter);
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.ParameterizedCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.Action`1", [$asm01.TypeRef("ExaPhaser.WebForms.ICommandParameter")])), 
      ParameterizedCommand__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.ICommandParameter")), 
      ParameterizedCommand_Execute
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_executeAction", $asm02.TypeRef("System.Action`1", [$asm01.TypeRef("ExaPhaser.WebForms.ICommandParameter")]));

    $.ImplementInterfaces(
      /* 0 */ $asm01.TypeRef("ExaPhaser.WebForms.ICommand")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.ICommandParameter */ 

(function ICommandParameter$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.EventArgs)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.System.Object)) ();
  };


  function ICommandParameter__ctor$00 () {
  }; 

  function ICommandParameter__ctor$01 (e) {
    this.ICommandParameter$Parameter$value = e;
  }; 

  function ICommandParameter_get_Parameter () {
    return this.ICommandParameter$Parameter$value;
  }; 

  function ICommandParameter_set_Parameter (value) {
    this.ICommandParameter$Parameter$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.ICommandParameter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ICommandParameter__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventArgs")), 
      ICommandParameter__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_Parameter", 
      JSIL.MethodSignature.Return($.Object), 
      ICommandParameter_get_Parameter
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Parameter", 
      JSIL.MethodSignature.Action($.Object), 
      ICommandParameter_set_Parameter
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ICommandParameter$Parameter$value", $.Object)
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Parameter", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("ExaPhaser.WebForms.Themes");
/* enum ExaPhaser.WebForms.Themes.CSSFramework */ 

JSIL.MakeEnum(
  {
    FullName: "ExaPhaser.WebForms.Themes.CSSFramework", 
    BaseType: $asm02.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Foundation6: 0, 
    Bootstrap: 1, 
    MaterialBootstrap: 2, 
    Materialize: 3, 
    PolyUi: 4, 
    Kubism: 5, 
  }
);

/* class ExaPhaser.WebForms.Themes.CSSUITheme */ 

(function CSSUITheme$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Themes.CSSFramework)) ();
  };


  function CSSUITheme__ctor (stylesheet) {
    this.CSSUITheme$Stylesheet$value = stylesheet;
  }; 

  function CSSUITheme_get_Stylesheet () {
    return this.CSSUITheme$Stylesheet$value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.Themes.CSSUITheme", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSFramework")), 
      CSSUITheme__ctor
    );

    $.Method({Static:false, Public:true }, "get_Stylesheet", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSFramework")), 
      CSSUITheme_get_Stylesheet
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "CSSUITheme$Stylesheet$value", $asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSFramework"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Stylesheet", $asm01.TypeRef("ExaPhaser.WebForms.Themes.CSSFramework"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("ExaPhaser.WebForms.Drawing");
/* class ExaPhaser.WebForms.Drawing.Point */ 

(function Point$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Int32)) ();
  };


  function Point__ctor (x, y) {
    this.Point$X$value = (x | 0);
    this.Point$Y$value = (y | 0);
  }; 

  function Point_get_X () {
    return this.Point$X$value;
  }; 

  function Point_get_Y () {
    return this.Point$Y$value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.Drawing.Point", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      Point__ctor
    );

    $.Method({Static:false, Public:true }, "get_X", 
      JSIL.MethodSignature.Return($.Int32), 
      Point_get_X
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Y", 
      JSIL.MethodSignature.Return($.Int32), 
      Point_get_Y
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "Point$X$value", $.Int32)
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "Point$Y$value", $.Int32)
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "X", $.Int32);

    $.Property({Static:false, Public:true }, "Y", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Drawing.RelativePoint */ 

(function RelativePoint$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.String)) ();
  };


  function RelativePoint__ctor (x, y) {
    this.RelativePoint$X$value = x;
    this.RelativePoint$Y$value = y;
  }; 

  function RelativePoint_get_X () {
    return this.RelativePoint$X$value;
  }; 

  function RelativePoint_get_Y () {
    return this.RelativePoint$Y$value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.Drawing.RelativePoint", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String]), 
      RelativePoint__ctor
    );

    $.Method({Static:false, Public:true }, "get_X", 
      JSIL.MethodSignature.Return($.String), 
      RelativePoint_get_X
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Y", 
      JSIL.MethodSignature.Return($.String), 
      RelativePoint_get_Y
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "RelativePoint$X$value", $.String)
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "RelativePoint$Y$value", $.String)
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "X", $.String);

    $.Property({Static:false, Public:true }, "Y", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("ExaPhaser.WebForms.Controls");
/* class ExaPhaser.WebForms.Controls.TextControl */ 

(function TextControl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.ExaPhaser.WebForms.FontStyle)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.SharpJS.Dom.Styles.TextAlign)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm04.SharpJS.JSLibraries.JQuery.JQElement)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm02.System.Int32)) ();
  };


  function TextControl__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  function TextControl_set_FontStyle (value) {
    this.SetFontStyle(value);
  }; 

  function TextControl_set_TextAlign (value) {
    (this.Control$InternalJQElement$value).Css("text-align", value.toString().toLowerCase());
  }; 

  function TextControl_SetFontStyle (newFontStyle) {
    (this.Control$InternalJQElement$value).Css("font-size", JSIL.ConcatString($T06().$Box(newFontStyle.FontStyle$FontSize$value), "pt"));
    (this.Control$InternalJQElement$value).Css("font-weight", (newFontStyle.FontStyle$FontWeight$value).toString().toLowerCase());
    this._fontStyle = newFontStyle;
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.TextControl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextControl__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_FontStyle", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.FontStyle")), 
      TextControl_set_FontStyle
    );

    $.Method({Static:false, Public:true }, "set_TextAlign", 
      JSIL.MethodSignature.Action($asm03.TypeRef("SharpJS.Dom.Styles.TextAlign")), 
      TextControl_set_TextAlign
    );

    $.Method({Static:false, Public:false}, "SetFontStyle", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.FontStyle")), 
      TextControl_SetFontStyle
    );

    $.Field({Static:false, Public:false}, "_fontStyle", $asm01.TypeRef("ExaPhaser.WebForms.FontStyle"));

    $.Property({Static:false, Public:true , Virtual:true }, "FontStyle", $asm01.TypeRef("ExaPhaser.WebForms.FontStyle"));

    $.Property({Static:false, Public:true }, "TextAlign", $asm03.TypeRef("SharpJS.Dom.Styles.TextAlign"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.Button */ 

(function Button$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Themes.CSSUITheme)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.ExaPhaser.WebForms.WebApplication)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.AnchorElement)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm02.System.EventHandler)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm02.System.EventArgs)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommand)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommandParameter)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm02.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.ExaPhaser.WebForms.ICommandParameter, [$asm02.System.EventArgs]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommand.Execute)) ();
  };


  function Button__ctor () {

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          $T00().prototype._ctor.call(this);
          switch ($T02().WebApplication$CurrentTheme$value.CSSUITheme$Stylesheet$value.valueOf()) {
            case 0: 
              var expr_37 = new ($T03())();
              expr_37.set_Class("button");
              this.set_InternalElement(expr_37);
              break $labelgroup0;

            case 1: 
            case 2: 
              var expr_7F = new ($T03())();
              expr_7F.set_Class("btn btn-default");
              this.set_InternalElement(expr_7F);
              break $labelgroup0;

            case 4: 
              var expr_4F = new ($T03())();
              expr_4F.set_Class("btn--default");
              this.set_InternalElement(expr_4F);
              break $labelgroup0;

            case 5: 
              var expr_67 = new ($T03())();
              expr_67.set_Class("btn");
              this.set_InternalElement(expr_67);
              break $labelgroup0;

          }
          var expr_97 = new ($T03())();
          expr_97.set_Class("button");
          this.set_InternalElement(expr_97);
          break $labelgroup0;

      }
    }
    /* Original label IL_A7 */ 
    $T05().prototype.add_Click.call(this, $T06().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnClick", $S00(), false, false)));
    this.PerformLayout();
  }; 

  function Button_get_Command () {
    return this.Button$Command$value;
  }; 

  function Button_get_Text () {
    return this._text;
  }; 

  function Button_OnClick (sender, e) {
    var expr_06 = this.Button$Command$value;
    if (expr_06 === null) {
      return;
    }
    $IM00().Call(expr_06, null, $S01().Construct(e));
  }; 

  function Button_set_Command (value) {
    this.Button$Command$value = value;
  }; 

  function Button_set_Text (value) {
    this.SetText(value);
  }; 

  function Button_SetText (value) {
    (this.get_InternalElement()).set_TextContent(value);
    this._text = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.Button", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Button__ctor
    );

    $.Method({Static:false, Public:true }, "get_Command", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.ICommand")), 
      Button_get_Command
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      Button_get_Text
    );

    $.Method({Static:false, Public:false}, "OnClick", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      Button_OnClick
    );

    $.Method({Static:false, Public:true }, "set_Command", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.ICommand")), 
      Button_set_Command
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      Button_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      Button_SetText
    );

    $.Field({Static:false, Public:false}, "_text", $.String);

    $.Field({Static:false, Public:false}, "Button$Command$value", $asm01.TypeRef("ExaPhaser.WebForms.ICommand"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "Command", $asm01.TypeRef("ExaPhaser.WebForms.ICommand"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.ElementGroup */ 

(function ElementGroup$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Collections.ObjectModel.Collection$b1.Of($asm03.SharpJS.Dom.Element))) ();
  };


  function ElementGroup__ctor$00 (existingCollection) {
    $T00().prototype._ctor.call(this, existingCollection);
  }; 

  function ElementGroup__ctor$01 () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm03.TypeRef("SharpJS.Dom.Element")]), 
      Name: "ExaPhaser.WebForms.Controls.ElementGroup", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm03.TypeRef("SharpJS.Dom.Element")])), 
      ElementGroup__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ElementGroup__ctor$01
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.HtmlControl */ 

(function HtmlControl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.DivElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.Internal.HtmlElementCollection)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.ElementGroup)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm02.System.Collections.Generic.IEnumerator$b1.Of($asm03.SharpJS.Dom.Element))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm02.System.Collections.ObjectModel.Collection$b1.Of($asm03.SharpJS.Dom.Element))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm02.System.Collections.IEnumerator)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm02.System.IDisposable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.ExaPhaser.WebForms.Controls.ElementGroup, [$asm02.System.Collections.ObjectModel.Collection$b1.Of($asm03.SharpJS.Dom.Element)]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm03.TypeRef("SharpJS.Dom.Element")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm02.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm02.System.Collections.Generic.IEnumerator$b1.Of($asm03.SharpJS.Dom.Element).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm02.System.IDisposable.Dispose)) ();
  };


  function HtmlControl__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this._elements = new ($T02())(this.get_InternalElement());
    this.PerformLayout();
  }; 

  function HtmlControl_get_Elements () {
    return $S00().Construct(this._elements);
  }; 

  function HtmlControl_set_Elements (value) {
    this.SetElements(value);
  }; 

  function HtmlControl_SetElements (newElements) {
    var enumerator = newElements.GetEnumerator();
    try {

      while ($IM00().Call(enumerator, null)) {
        var current = $IM01().Call(enumerator, null);
        $S01().CallVirtual("Add", null, this._elements, current);
      }
    } finally {
      if (enumerator !== null) {
        $IM02().Call(enumerator, null);
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.HtmlControl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      HtmlControl__ctor
    );

    $.Method({Static:false, Public:true }, "get_Elements", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Controls.ElementGroup")), 
      HtmlControl_get_Elements
    );

    $.Method({Static:false, Public:true }, "set_Elements", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Controls.ElementGroup")), 
      HtmlControl_set_Elements
    );

    $.Method({Static:false, Public:false}, "SetElements", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Controls.ElementGroup")), 
      HtmlControl_SetElements
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_elements", $asm01.TypeRef("ExaPhaser.WebForms.Controls.Internal.HtmlElementCollection"));

    $.Property({Static:false, Public:true }, "Elements", $asm01.TypeRef("ExaPhaser.WebForms.Controls.ElementGroup"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.ImageView */ 

(function ImageView$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.ImageElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };


  function ImageView__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this.PerformLayout();
  }; 

  function ImageView_get_SourceURI () {
    return this._sourceURI;
  }; 

  function ImageView_set_SourceURI (value) {
    this.SetImageSource(value);
  }; 

  function ImageView_SetImageSource (sourceURI) {
    (this.get_InternalElement()).set_Item("src", sourceURI);
    this._sourceURI = sourceURI;
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.ImageView", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ImageView__ctor
    );

    $.Method({Static:false, Public:true }, "get_SourceURI", 
      JSIL.MethodSignature.Return($.String), 
      ImageView_get_SourceURI
    );

    $.Method({Static:false, Public:true }, "set_SourceURI", 
      JSIL.MethodSignature.Action($.String), 
      ImageView_set_SourceURI
    );

    $.Method({Static:false, Public:false}, "SetImageSource", 
      JSIL.MethodSignature.Action($.String), 
      ImageView_SetImageSource
    );

    $.Field({Static:false, Public:false}, "_sourceURI", $.String);

    $.Property({Static:false, Public:true }, "SourceURI", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum ExaPhaser.WebForms.Controls.InputType */ 

JSIL.MakeEnum(
  {
    FullName: "ExaPhaser.WebForms.Controls.InputType", 
    BaseType: $asm02.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Text: 0, 
    Password: 1, 
    Email: 2, 
    Number: 3, 
    Search: 4, 
  }
);

/* class ExaPhaser.WebForms.Controls.LinkLabel */ 

(function LinkLabel$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.AnchorElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm02.System.EventHandler)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm02.System.Delegate)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm02.System.Threading.Interlocked)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm02.System.EventArgs)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommand)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommandParameter)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm02.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.ExaPhaser.WebForms.ICommandParameter, [$asm02.System.EventArgs]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommand.Execute)) ();
  };


  function LinkLabel__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T02())());
    (this.get_InternalElement()).add_Click($T04().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnClick", $S00(), false, false)));
    this.PerformLayout();
  }; 

  function LinkLabel_add_Click (value) {
    var eventHandler = this.Click;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T05().Combine(eventHandler2, value);
      eventHandler = $T06().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "Click"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function LinkLabel_get_Command () {
    return this.LinkLabel$Command$value;
  }; 

  function LinkLabel_get_LinkLocation () {
    return (this.get_InternalElement()).get_Item("href");
  }; 

  function LinkLabel_get_Text () {
    return this._text;
  }; 

  function LinkLabel_OnClick (sender, e) {
    var expr_06 = this.Click;
    if (expr_06 !== null) {
      expr_06(this, e);
    }
    var expr_19 = this.LinkLabel$Command$value;
    if (expr_19 === null) {
      return;
    }
    $IM00().Call(expr_19, null, $S01().Construct(e));
  }; 

  function LinkLabel_remove_Click (value) {
    var eventHandler = this.Click;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T05().Remove(eventHandler2, value);
      eventHandler = $T06().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "Click"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function LinkLabel_set_Command (value) {
    this.LinkLabel$Command$value = value;
  }; 

  function LinkLabel_set_LinkLocation (value) {
    (this.get_InternalElement()).set_Item("href", value);
  }; 

  function LinkLabel_set_Text (value) {
    this.SetText(value);
  }; 

  function LinkLabel_SetText (value) {
    (this.get_InternalElement()).set_TextContent(value);
    this._text = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.LinkLabel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      LinkLabel__ctor
    );

    $.Method({Static:false, Public:true }, "add_Click", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      LinkLabel_add_Click
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Command", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.ICommand")), 
      LinkLabel_get_Command
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_LinkLocation", 
      JSIL.MethodSignature.Return($.String), 
      LinkLabel_get_LinkLocation
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      LinkLabel_get_Text
    );

    $.Method({Static:false, Public:false}, "OnClick", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      LinkLabel_OnClick
    );

    $.Method({Static:false, Public:true }, "remove_Click", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      LinkLabel_remove_Click
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Command", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.ICommand")), 
      LinkLabel_set_Command
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LinkLocation", 
      JSIL.MethodSignature.Action($.String), 
      LinkLabel_set_LinkLocation
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      LinkLabel_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      LinkLabel_SetText
    );

    $.Field({Static:false, Public:false}, "_text", $.String);

    $.Field({Static:false, Public:false}, "Click", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LinkLabel$Command$value", $asm01.TypeRef("ExaPhaser.WebForms.ICommand"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "LinkLocation", $.String);

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "Command", $asm01.TypeRef("ExaPhaser.WebForms.ICommand"));

    $.Event({Static:false, Public:true }, "Click", $asm02.TypeRef("System.EventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.Panel */ 

(function Panel$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.DivElement)) ();
  };


  function Panel__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this.PerformLayout();
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.Panel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Panel__ctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.PreformattedTextBlock */ 

(function PreformattedTextBlock$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.PreformattedElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };


  function PreformattedTextBlock__ctor () {
    this._text = "";
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this.PerformLayout();
  }; 

  function PreformattedTextBlock_get_Text () {
    return this._text;
  }; 

  function PreformattedTextBlock_set_Text (value) {
    this.SetText(value);
  }; 

  function PreformattedTextBlock_SetText (value) {
    (this.get_InternalElement()).set_TextContent(value);
    this._text = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.PreformattedTextBlock", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      PreformattedTextBlock__ctor
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      PreformattedTextBlock_get_Text
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      PreformattedTextBlock_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      PreformattedTextBlock_SetText
    );

    $.Field({Static:false, Public:false}, "_text", $.String);

    $.Property({Static:false, Public:true }, "Text", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.TextArea */ 

(function TextArea$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.TextAreaElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Themes.CSSFramework)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Themes.CSSUITheme)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.ExaPhaser.WebForms.WebApplication)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm02.System.EventHandler)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.SharpJS.JSLibraries.JQuery.JQElement)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm02.System.Delegate)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm02.System.Threading.Interlocked)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm02.System.Int32)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm02.System.EventArgs)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm02.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };


  function TextArea__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T02())());
    var stylesheet = $T05().WebApplication$CurrentTheme$value.CSSUITheme$Stylesheet$value;
    if (!((stylesheet !== $T03().Bootstrap) && (stylesheet !== $T03().MaterialBootstrap))) {
      (this.get_InternalElement()).set_Class("form-control");
    }
    (this.get_InternalElement()).add_Change($T07().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnTextChanged", $S00(), false, false)));
    (this.Control$InternalJQElement$value).add_EnterKeyPressed($T07().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnEnterPressed", $S01(), false, false)));
    (this.Control$InternalJQElement$value).add_Focus($T07().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnFocus", $S02(), false, false)));
    this.PerformLayout();
  }; 

  function TextArea_add_EnterPressed (value) {
    var eventHandler = this.EnterPressed;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Combine(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "EnterPressed"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_add_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Combine(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_add_TextChanged (value) {
    var eventHandler = this.TextChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Combine(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "TextChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_get_Columns () {
    return $T0B().Parse((this.get_InternalElement()).get_Item("cols"));
  }; 

  function TextArea_get_PlaceholderText () {
    return (this.Control$InternalJQElement$value).Attr("placeholder");
  }; 

  function TextArea_get_Rows () {
    return $T0B().Parse((this.get_InternalElement()).get_Item("rows"));
  }; 

  function TextArea_get_Text () {
    return this.GetText();
  }; 

  function TextArea_GetText () {
    return (this.get_InternalElement()).get_Item("value");
  }; 

  function TextArea_OnEnterPressed (sender, e) {
    var enterPressed = this.EnterPressed;
    if (enterPressed !== null) {
      enterPressed(this, e);
    }
  }; 

  function TextArea_OnFocus (sender, e) {
    var focus = this.Focus;
    if (focus !== null) {
      focus(this, e);
    }
  }; 

  function TextArea_OnTextChanged (sender, e) {
    var textChanged = this.TextChanged;
    if (textChanged !== null) {
      textChanged(this, e);
    }
  }; 

  function TextArea_remove_EnterPressed (value) {
    var eventHandler = this.EnterPressed;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Remove(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "EnterPressed"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_remove_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Remove(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_remove_TextChanged (value) {
    var eventHandler = this.TextChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Remove(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "TextChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_set_Columns (value) {
    (this.get_InternalElement()).set_Item("cols", (value).toString());
  }; 

  function TextArea_set_PlaceholderText (value) {
    (this.Control$InternalJQElement$value).Attr("placeholder", value);
  }; 

  function TextArea_set_Rows (value) {
    (this.get_InternalElement()).set_Item("rows", (value).toString());
  }; 

  function TextArea_set_Text (value) {
    this.SetText(value);
  }; 

  function TextArea_SetText (value) {
    (this.get_InternalElement()).set_Item("value", value);
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.TextArea", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextArea__ctor
    );

    $.Method({Static:false, Public:true }, "add_EnterPressed", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextArea_add_EnterPressed
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_Focus", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextArea_add_Focus
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_TextChanged", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextArea_add_TextChanged
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Columns", 
      JSIL.MethodSignature.Return($.Int32), 
      TextArea_get_Columns
    );

    $.Method({Static:false, Public:true }, "get_PlaceholderText", 
      JSIL.MethodSignature.Return($.String), 
      TextArea_get_PlaceholderText
    );

    $.Method({Static:false, Public:true }, "get_Rows", 
      JSIL.MethodSignature.Return($.Int32), 
      TextArea_get_Rows
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      TextArea_get_Text
    );

    $.Method({Static:false, Public:false}, "GetText", 
      JSIL.MethodSignature.Return($.String), 
      TextArea_GetText
    );

    $.Method({Static:false, Public:false}, "OnEnterPressed", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      TextArea_OnEnterPressed
    );

    $.Method({Static:false, Public:false}, "OnFocus", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      TextArea_OnFocus
    );

    $.Method({Static:false, Public:false}, "OnTextChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      TextArea_OnTextChanged
    );

    $.Method({Static:false, Public:true }, "remove_EnterPressed", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextArea_remove_EnterPressed
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_Focus", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextArea_remove_Focus
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_TextChanged", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextArea_remove_TextChanged
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Columns", 
      JSIL.MethodSignature.Action($.Int32), 
      TextArea_set_Columns
    );

    $.Method({Static:false, Public:true }, "set_PlaceholderText", 
      JSIL.MethodSignature.Action($.String), 
      TextArea_set_PlaceholderText
    );

    $.Method({Static:false, Public:true }, "set_Rows", 
      JSIL.MethodSignature.Action($.Int32), 
      TextArea_set_Rows
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      TextArea_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      TextArea_SetText
    );

    $.Field({Static:false, Public:false}, "EnterPressed", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Focus", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextChanged", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Columns", $.Int32);

    $.Property({Static:false, Public:true }, "PlaceholderText", $.String);

    $.Property({Static:false, Public:true }, "Rows", $.Int32);

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Event({Static:false, Public:true }, "EnterPressed", $asm02.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "Focus", $asm02.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "TextChanged", $asm02.TypeRef("System.EventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.TextBlock */ 

(function TextBlock$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.ParagraphElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };


  function TextBlock__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T02())());
    this.PerformLayout();
  }; 

  function TextBlock_get_Text () {
    return this._text;
  }; 

  function TextBlock_set_Text (value) {
    this.SetText(value);
  }; 

  function TextBlock_SetText (value) {
    (this.get_InternalElement()).set_TextContent(value);
    this._text = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.TextBlock", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextBlock__ctor
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      TextBlock_get_Text
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      TextBlock_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      TextBlock_SetText
    );

    $.Field({Static:false, Public:false}, "_text", $.String);

    $.Property({Static:false, Public:true }, "Text", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.TextBox */ 

(function TextBox$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.InputElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Themes.CSSFramework)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Themes.CSSUITheme)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.ExaPhaser.WebForms.WebApplication)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm02.System.EventHandler)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.SharpJS.JSLibraries.JQuery.JQElement)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm02.System.Delegate)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm02.System.Threading.Interlocked)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.InputType)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm02.System.EventArgs)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Object, $asm02.System.EventArgs]))) ();
  };


  function TextBox__ctor () {
    $T00().prototype._ctor.call(this);
    var expr_0C = new ($T01())();
    expr_0C.set_Type("text");
    this.set_InternalElement(expr_0C);
    var stylesheet = $T05().WebApplication$CurrentTheme$value.CSSUITheme$Stylesheet$value;
    if (!((stylesheet !== $T03().Bootstrap) && (stylesheet !== $T03().MaterialBootstrap))) {
      (this.get_InternalElement()).set_Class("form-control");
    }
    (this.get_InternalElement()).add_Change($T07().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnTextChanged", $S00(), false, false)));
    (this.Control$InternalJQElement$value).add_EnterKeyPressed($T07().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnEnterPressed", $S01(), false, false)));
    (this.Control$InternalJQElement$value).add_Focus($T07().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnFocus", $S02(), false, false)));
    this.PerformLayout();
  }; 

  function TextBox_add_EnterPressed (value) {
    var eventHandler = this.EnterPressed;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Combine(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "EnterPressed"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_add_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Combine(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_add_TextChanged (value) {
    var eventHandler = this.TextChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Combine(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "TextChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_get_PlaceholderText () {
    return (this.Control$InternalJQElement$value).Attr("placeholder");
  }; 

  function TextBox_get_Text () {
    return this.GetText();
  }; 

  function TextBox_get_TextInputType () {
    return this.GetInputType();
  }; 

  function TextBox_GetInputType () {
    var a = (this.get_InternalElement()).get_Item("type");
    if (a == "text") {
      return $T0C().Text;
    }
    if (a == "password") {
      return $T0C().Password;
    }
    if (a == "email") {
      return $T0C().Email;
    }
    if (a == "number") {
      return $T0C().Number;
    }
    if (!(a == "search")) {
      return $T0C().Text;
    }
    return $T0C().Search;
  }; 

  function TextBox_GetText () {
    return (this.get_InternalElement()).get_Item("value");
  }; 

  function TextBox_OnEnterPressed (sender, e) {
    var enterPressed = this.EnterPressed;
    if (enterPressed !== null) {
      enterPressed(this, e);
    }
  }; 

  function TextBox_OnFocus (sender, e) {
    var focus = this.Focus;
    if (focus !== null) {
      focus(this, e);
    }
  }; 

  function TextBox_OnTextChanged (sender, e) {
    var textChanged = this.TextChanged;
    if (textChanged !== null) {
      textChanged(this, e);
    }
  }; 

  function TextBox_remove_EnterPressed (value) {
    var eventHandler = this.EnterPressed;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Remove(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "EnterPressed"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_remove_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Remove(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_remove_TextChanged (value) {
    var eventHandler = this.TextChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T09().Remove(eventHandler2, value);
      eventHandler = $T0A().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "TextChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_set_PlaceholderText (value) {
    (this.Control$InternalJQElement$value).Attr("placeholder", value);
  }; 

  function TextBox_set_Text (value) {
    this.SetText(value);
  }; 

  function TextBox_set_TextInputType (value) {
    this.SetInputType(value);
  }; 

  function TextBox_SetInputType (value) {
    switch (value.valueOf()) {
      case 0: 
        (this.get_InternalElement()).set_Item("type", "text");
        return;

      case 1: 
        (this.get_InternalElement()).set_Item("type", "password");
        return;

      case 2: 
        (this.get_InternalElement()).set_Item("type", "email");
        return;

      case 3: 
        (this.get_InternalElement()).set_Item("type", "number");
        return;

      case 4: 
        (this.get_InternalElement()).set_Item("type", "search");
        return;

      default: 
        return;

    }
  }; 

  function TextBox_SetText (value) {
    (this.get_InternalElement()).set_Item("value", value);
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.TextBox", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextBox__ctor
    );

    $.Method({Static:false, Public:true }, "add_EnterPressed", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextBox_add_EnterPressed
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_Focus", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextBox_add_Focus
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_TextChanged", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextBox_add_TextChanged
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PlaceholderText", 
      JSIL.MethodSignature.Return($.String), 
      TextBox_get_PlaceholderText
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      TextBox_get_Text
    );

    $.Method({Static:false, Public:true }, "get_TextInputType", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Controls.InputType")), 
      TextBox_get_TextInputType
    );

    $.Method({Static:false, Public:false}, "GetInputType", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Controls.InputType")), 
      TextBox_GetInputType
    );

    $.Method({Static:false, Public:false}, "GetText", 
      JSIL.MethodSignature.Return($.String), 
      TextBox_GetText
    );

    $.Method({Static:false, Public:false}, "OnEnterPressed", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      TextBox_OnEnterPressed
    );

    $.Method({Static:false, Public:false}, "OnFocus", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      TextBox_OnFocus
    );

    $.Method({Static:false, Public:false}, "OnTextChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm02.TypeRef("System.EventArgs")]), 
      TextBox_OnTextChanged
    );

    $.Method({Static:false, Public:true }, "remove_EnterPressed", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextBox_remove_EnterPressed
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_Focus", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextBox_remove_Focus
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_TextChanged", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler")), 
      TextBox_remove_TextChanged
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PlaceholderText", 
      JSIL.MethodSignature.Action($.String), 
      TextBox_set_PlaceholderText
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      TextBox_set_Text
    );

    $.Method({Static:false, Public:true }, "set_TextInputType", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Controls.InputType")), 
      TextBox_set_TextInputType
    );

    $.Method({Static:false, Public:false}, "SetInputType", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Controls.InputType")), 
      TextBox_SetInputType
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      TextBox_SetText
    );

    $.Field({Static:false, Public:false}, "EnterPressed", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Focus", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextChanged", $asm02.TypeRef("System.EventHandler"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "PlaceholderText", $.String);

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "TextInputType", $asm01.TypeRef("ExaPhaser.WebForms.Controls.InputType"));

    $.Event({Static:false, Public:true }, "EnterPressed", $asm02.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "Focus", $asm02.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "TextChanged", $asm02.TypeRef("System.EventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.WebView */ 

(function WebView$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.IFrameElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.SharpJS.JSLibraries.JQuery.JQElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };


  function WebView__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this.PerformLayout();
  }; 

  function WebView_get_DocumentSource () {
    return (this.Control$InternalJQElement$value).Html();
  }; 

  function WebView_get_SourceURI () {
    return this._sourceURI;
  }; 

  function WebView_LoadHTML (html) {
    this.InternalJQElement.Contents().find('html').html(html);
    this._sourceURI = null;
  }; 

  function WebView_LoadURI (uri) {
    (this.get_InternalElement()).set_Item("src", uri);
    this._sourceURI = uri;
  }; 

  function WebView_set_DocumentSource (value) {
    this.LoadHTML(value);
  }; 

  function WebView_set_SourceURI (value) {
    this.LoadURI(value);
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.WebView", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WebView__ctor
    );

    $.Method({Static:false, Public:true }, "get_DocumentSource", 
      JSIL.MethodSignature.Return($.String), 
      WebView_get_DocumentSource
    );

    $.Method({Static:false, Public:true }, "get_SourceURI", 
      JSIL.MethodSignature.Return($.String), 
      WebView_get_SourceURI
    );

    $.Method({Static:false, Public:true }, "LoadHTML", 
      JSIL.MethodSignature.Action($.String), 
      WebView_LoadHTML
    );

    $.Method({Static:false, Public:true }, "LoadURI", 
      JSIL.MethodSignature.Action($.String), 
      WebView_LoadURI
    );

    $.Method({Static:false, Public:true }, "set_DocumentSource", 
      JSIL.MethodSignature.Action($.String), 
      WebView_set_DocumentSource
    );

    $.Method({Static:false, Public:true }, "set_SourceURI", 
      JSIL.MethodSignature.Action($.String), 
      WebView_set_SourceURI
    );

    $.Field({Static:false, Public:false}, "_sourceURI", $.String);

    $.Property({Static:false, Public:true }, "DocumentSource", $.String);

    $.Property({Static:false, Public:true }, "SourceURI", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum ExaPhaser.WebForms.Controls.FileReaderEncoding */ 

JSIL.MakeEnum(
  {
    FullName: "ExaPhaser.WebForms.Controls.FileReaderEncoding", 
    BaseType: $asm02.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    ASCII: 0, 
    UTF8: 1, 
    UTF16: 2, 
  }
);

/* enum ExaPhaser.WebForms.Controls.FileUploadType */ 

JSIL.MakeEnum(
  {
    FullName: "ExaPhaser.WebForms.Controls.FileUploadType", 
    BaseType: $asm02.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    TextFile: 0, 
    ImageFile: 1, 
    BinaryFile: 2, 
  }
);

/* class ExaPhaser.WebForms.Controls.FileUploadButton */ 

(function FileUploadButton$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.SharpJS.Dom.Elements.InputElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.FileUploadEventArgs)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm02.System.EventHandler$b1.Of($asm01.ExaPhaser.WebForms.Controls.FileUploadEventArgs))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommand)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommandParameter)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm02.System.Delegate)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm02.System.Threading.Interlocked)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.FileUploadButton_$l$gc__DisplayClass22_1)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm02.System.Action$b3.Of(
        $asm02.System.Object, $asm02.System.String, 
        $asm02.System.String
    ))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm02.System.Action$b1.Of($asm02.System.Object))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm04.SharpJS.JSLibraries.JQuery.JQElement)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.FileReaderEncoding)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.FileUploadType)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize(System.Array.Of($asm02.System.String))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm02.System.Char)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize(System.Array.Of($asm02.System.Char))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm02.System.Collections.Generic.List$b1.Of($asm02.System.String))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm02.System.Int32)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm02.System.Collections.Generic.List$b1)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.ExaPhaser.WebForms.ICommandParameter, [$asm02.System.EventArgs]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm02.System.Object, $asm02.System.String, 
        $asm02.System.String
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(JSIL.MethodSignature.Action($asm02.TypeRef("System.Object")))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.System.Collections.Generic.List$b1.Of($asm02.System.String), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.ExaPhaser.WebForms.ICommand.Execute)) ();
  };


  function FileUploadButton__ctor () {
    $T00().prototype._ctor.call(this);
    var expr_0C = new ($T01())();
    expr_0C.set_Type("file");
    this.set_InternalElement(expr_0C);
    this.PerformLayout();
  }; 

  function FileUploadButton_$lPerformLayout$gb__22_0 (jsBlob, textContent, dataUrl) {
    var e = new ($T04())(jsBlob, textContent, dataUrl);
    var expr_0F = this.FileOpened;
    if (expr_0F !== null) {
      expr_0F(this, e);
    }
    var expr_22 = this.FileUploadButton$Command$value;
    if (expr_22 === null) {
      return;
    }
    $IM00().Call(expr_22, null, $S00().Construct(e));
  }; 

  function FileUploadButton_add_FileOpened (value) {
    var eventHandler = this.FileOpened;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T08().Combine(eventHandler2, value);
      eventHandler = $T09().CompareExchange$b1($T05())(/* ref */ new JSIL.MemberReference(this, "FileOpened"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function FileUploadButton_get_Command () {
    return this.FileUploadButton$Command$value;
  }; 

  function FileUploadButton_get_FileEncoding () {
    return this.FileUploadButton$FileEncoding$value;
  }; 

  function FileUploadButton_get_FileName () {
    return this.FileUploadButton$FileName$value;
  }; 

  function FileUploadButton_get_UploadType () {
    return this.FileUploadButton$UploadType$value;
  }; 

  function FileUploadButton_PerformLayout () {
    var expr_05 = new ($T0A())();
    expr_05.$l$g4__this = this;
    $T00().prototype.PerformLayout.call(this);
    expr_05.fileOpenAction = $T0B().New(this, null, new JSIL.MethodPointerInfo($thisType, "$lPerformLayout$gb__22_0", $S01(), false, false));
    var handler = $T0C().New(expr_05, null, new JSIL.MethodPointerInfo($asm01.ExaPhaser.WebForms.Controls.FileUploadButton_$l$gc__DisplayClass22_1, "$lPerformLayout$gb__1", $S02(), false, false));
    (this.Control$InternalJQElement$value).BindEventListener("change", handler);
  }; 

  function FileUploadButton_remove_FileOpened (value) {
    var eventHandler = this.FileOpened;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T08().Remove(eventHandler2, value);
      eventHandler = $T09().CompareExchange$b1($T05())(/* ref */ new JSIL.MemberReference(this, "FileOpened"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function FileUploadButton_set_Command (value) {
    this.FileUploadButton$Command$value = value;
  }; 

  function FileUploadButton_set_FileEncoding (value) {
    this.FileUploadButton$FileEncoding$value = value;
  }; 

  function FileUploadButton_set_FileName (value) {
    this.FileUploadButton$FileName$value = value;
  }; 

  function FileUploadButton_set_Filter (value) {
    this.SetFilter(value);
  }; 

  function FileUploadButton_set_UploadType (value) {
    this.FileUploadButton$UploadType$value = value;
  }; 

  function FileUploadButton_SetFilter (filter) {
    var array = (JSIL.SplitString(filter, JSIL.Array.New($T11(), ["|"])));
    var list = $S03().Construct();
    if ((array.length | 0) === 1) {
      list.Add(array[0]);
    } else {

      for (var i = 1; i < (array.length | 0); i = ((i + 2) | 0)) {
        list.Add(array[i]);
      }
    }
    var text = (System.String.Replace(System.String.Replace(JSIL.JoinEnumerable(",", list), "*", ""), ";", ","));
    if (!$T03().IsNullOrWhiteSpace(text)) {
      (this.get_InternalElement()).get_DOMRepresentation().accept = text;
      return;
    }
    (this.get_InternalElement()).get_DOMRepresentation().accept = "";
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.FileUploadButton", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      FileUploadButton__ctor
    );

    $.Method({Static:false, Public:false}, "$lPerformLayout$gb__22_0", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $.String
        ]), 
      FileUploadButton_$lPerformLayout$gb__22_0
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_FileOpened", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler`1", [$asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadEventArgs")])), 
      FileUploadButton_add_FileOpened
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Command", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.ICommand")), 
      FileUploadButton_get_Command
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_FileEncoding", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Controls.FileReaderEncoding")), 
      FileUploadButton_get_FileEncoding
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_FileName", 
      JSIL.MethodSignature.Return($.String), 
      FileUploadButton_get_FileName
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UploadType", 
      JSIL.MethodSignature.Return($asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadType")), 
      FileUploadButton_get_UploadType
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "PerformLayout", 
      JSIL.MethodSignature.Void, 
      FileUploadButton_PerformLayout
    );

    $.Method({Static:false, Public:true }, "remove_FileOpened", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.EventHandler`1", [$asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadEventArgs")])), 
      FileUploadButton_remove_FileOpened
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Command", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.ICommand")), 
      FileUploadButton_set_Command
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FileEncoding", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Controls.FileReaderEncoding")), 
      FileUploadButton_set_FileEncoding
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FileName", 
      JSIL.MethodSignature.Action($.String), 
      FileUploadButton_set_FileName
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Filter", 
      JSIL.MethodSignature.Action($.String), 
      FileUploadButton_set_Filter
    );

    $.Method({Static:false, Public:true }, "set_UploadType", 
      JSIL.MethodSignature.Action($asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadType")), 
      FileUploadButton_set_UploadType
    )
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "SetFilter", 
      JSIL.MethodSignature.Action($.String), 
      FileUploadButton_SetFilter
    );

    $.Field({Static:false, Public:false}, "FileOpened", $asm02.TypeRef("System.EventHandler`1", [$asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadEventArgs")]))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FileUploadButton$FileEncoding$value", $asm01.TypeRef("ExaPhaser.WebForms.Controls.FileReaderEncoding"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FileUploadButton$UploadType$value", $asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadType"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FileUploadButton$Command$value", $asm01.TypeRef("ExaPhaser.WebForms.ICommand"))
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FileUploadButton$FileName$value", $.String)
      .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "FileEncoding", $asm01.TypeRef("ExaPhaser.WebForms.Controls.FileReaderEncoding"));

    $.Property({Static:false, Public:true }, "Filter", $.String);

    $.Property({Static:false, Public:true }, "UploadType", $asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadType"));

    $.Property({Static:false, Public:true }, "Command", $asm01.TypeRef("ExaPhaser.WebForms.ICommand"));

    $.Property({Static:false, Public:true }, "FileName", $.String);

    $.Event({Static:false, Public:true }, "FileOpened", $asm02.TypeRef("System.EventHandler`1", [$asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadEventArgs")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.FileUploadButton+<>c__DisplayClass22_0 */ 

(function $l$gc__DisplayClass22_0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.FileUploadType)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.FileUploadButton)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm04.SharpJS.JSLibraries.BufferConverter)) ();
  };


  function $l$gc__DisplayClass22_0__ctor () {
  }; 

  function $l$gc__DisplayClass22_0_$lPerformLayout$gb__2 () {
    var obj = (this.reader.result);
    var arg = null;
    var arg2 = null;
    var uploadType = this.CS$$l$g8__locals1.$l$g4__this.FileUploadButton$UploadType$value;
    if ((uploadType.valueOf() | 0) !== 0) {
      if (uploadType === $T02().ImageFile) {
        arg2 = $T01().$As(obj);
      }
    } else {
      switch ((this.CS$$l$g8__locals1.$l$g4__this.FileUploadButton$FileEncoding$value).valueOf()) {
        case 0: 
          arg = $T01().$As(obj);
          break;

        case 1: 
          arg = (String.fromCharCode.apply(null, new Uint8Array(obj)));
          break;

        case 2: 
          arg = (String.fromCharCode.apply(null, new Uint16Array(obj)));
          break;

      }
    }
    this.CS$$l$g8__locals1.fileOpenAction(obj, arg, arg2);
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.Controls.FileUploadButton+<>c__DisplayClass22_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass22_0__ctor
    );

    $.Method({Static:false, Public:false}, "$lPerformLayout$gb__2", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass22_0_$lPerformLayout$gb__2
    );

    $.Field({Static:false, Public:true }, "reader", $.Object);

    $.Field({Static:false, Public:true }, "CS$$l$g8__locals1", $asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadButton+<>c__DisplayClass22_1"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class ExaPhaser.WebForms.Controls.FileUploadButton+<>c__DisplayClass22_1 */ 

(function $l$gc__DisplayClass22_1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.FileUploadButton_$l$gc__DisplayClass22_0)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.ExaPhaser.WebForms.Controls.FileUploadButton)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm02.System.Action)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(JSIL.MethodSignature.Void)) ();
  };


  function $l$gc__DisplayClass22_1__ctor () {
  }; 

  function $l$gc__DisplayClass22_1_$lPerformLayout$gb__1 (evt) {
    var $closure0 = new ($T01())();
    $closure0.CS$$l$g8__locals1 = this;
    var obj = (evt.target);
    var obj2 = (obj.files[0]);
    this.$l$g4__this.FileUploadButton$FileName$value = $T03().$Cast(obj2.name);
    $closure0.reader = (new FileReader());
    var arg = $T04().New($closure0, null, new JSIL.MethodPointerInfo($asm01.ExaPhaser.WebForms.Controls.FileUploadButton_$l$gc__DisplayClass22_0, "$lPerformLayout$gb__2", $S00(), false, false));
    $closure0.reader.onload = arg;
    switch ((this.$l$g4__this.FileUploadButton$UploadType$value).valueOf()) {
      case 0: 
      case 2: 
        if (((this.$l$g4__this.FileUploadButton$FileEncoding$value).valueOf() | 0) === 0) {
          $closure0.reader.readAsText(obj2);;
          return;
        }
        $closure0.reader.readAsArrayBuffer(obj2);;
        return;

      case 1: 
        $closure0.reader.readAsDataURL(obj2);;
        return;

      default: 
        return;

    }
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.Controls.FileUploadButton+<>c__DisplayClass22_1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass22_1__ctor
    );

    $.Method({Static:false, Public:false}, "$lPerformLayout$gb__1", 
      JSIL.MethodSignature.Action($.Object), 
      $l$gc__DisplayClass22_1_$lPerformLayout$gb__1
    );

    $.Field({Static:false, Public:true }, "fileOpenAction", $asm02.TypeRef("System.Action`3", [
          $.Object, $.String, 
          $.String
        ]));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm01.TypeRef("ExaPhaser.WebForms.Controls.FileUploadButton"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm02.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class ExaPhaser.WebForms.Controls.FileUploadEventArgs */ 

(function FileUploadEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.EventArgs)) ();
  };


  function FileUploadEventArgs__ctor (jsBlob, plainTextContent, dataUrl) {
    $T02().prototype._ctor.call(this);
    this.JSBlob = jsBlob;
    this.PlainTextContent = plainTextContent;
    this.DataURL = dataUrl;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.EventArgs"), 
      Name: "ExaPhaser.WebForms.Controls.FileUploadEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $.String
        ]), 
      FileUploadEventArgs__ctor
    );

    $.Field({Static:false, Public:true , ReadOnly:true }, "DataURL", $.String);

    $.Field({Static:false, Public:true , ReadOnly:true }, "JSBlob", $.Object);

    $.Field({Static:false, Public:true , ReadOnly:true }, "PlainTextContent", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("ExaPhaser.WebForms.Controls.Internal");
/* class ExaPhaser.WebForms.Controls.Internal.HtmlElementCollection */ 

(function HtmlElementCollection$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.SharpJS.Dom.Element)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.System.Collections.ObjectModel.Collection$b1.Of($asm03.SharpJS.Dom.Element))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.Int32)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.System.Int32, $asm03.TypeRef("SharpJS.Dom.Element")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm03.TypeRef("SharpJS.Dom.Element"), [$asm02.System.Int32]))) ();
  };


  function HtmlElementCollection__ctor (parentElement) {
    $T01().prototype._ctor.call(this);
    this._parentElement = parentElement;
  }; 

  function HtmlElementCollection_InsertItem$00 (index, item) {
    $S00().Call($T01().prototype, "InsertItem", null, this, index, item);
    this._parentElement.ElementHandle.appendChild(item.ElementHandle);
  }; 

  function HtmlElementCollection_RemoveItem (index) {
    var child = $S01().Call($T01().prototype, "get_Item", null, this, index);
    this._parentElement.ElementHandle.removeChild(child.ElementHandle);
    $T01().prototype.RemoveItem.call(this, index);
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm03.TypeRef("SharpJS.Dom.Element")]), 
      Name: "ExaPhaser.WebForms.Controls.Internal.HtmlElementCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm03.TypeRef("SharpJS.Dom.Element")), 
      HtmlElementCollection__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InsertItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm03.TypeRef("SharpJS.Dom.Element")]), 
      HtmlElementCollection_InsertItem$00
    );

    $.Method({Static:false, Public:false, Virtual:true }, "RemoveItem", 
      JSIL.MethodSignature.Action($.Int32), 
      HtmlElementCollection_RemoveItem
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_parentElement", $asm03.TypeRef("SharpJS.Dom.Element"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

